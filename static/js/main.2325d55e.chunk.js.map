{"version":3,"sources":["components/Card/Card.js","components/Header/Header.js","components/Instructions/Instructions.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","alt","name","src","image","Header","children","message","score","highscore","Instructions","instructions","Wrapper","App","state","images","endGame","setState","console","log","this","forEach","count","find","o","i","sort","Math","random","map","key","url","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8oCAWeA,G,MARF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCOxBC,G,MAVA,SAAAT,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,WAAWD,EAAMW,SAChC,yBAAKV,UAAU,UAAf,UACUD,EAAMY,MADhB,eACmCZ,EAAMa,cCD9BC,G,MAJM,SAAAd,GAAK,OACxB,yBAAKC,UAAU,gBAAgBD,EAAMe,gBCCxBC,G,MAFC,SAAAhB,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMU,YCmE1CO,E,2MA5DbC,MAAQ,CACNC,OAAQA,EACRP,MAAO,EACPC,UAAW,EACXE,aAAc,2EACdJ,QAAS,I,EAGXS,QAAU,WAWR,OAVI,EAAKF,MAAMN,MAAQ,EAAKM,MAAML,WAChC,EAAKQ,SAAS,CAACR,UAAW,EAAKK,MAAMN,QAAQ,WAC3CU,QAAQC,IAAIC,KAAKN,MAAML,cAG3B,EAAKK,MAAMC,OAAOM,SAAQ,SAAAjB,GACxBA,EAAMkB,MAAQ,KAEhB,EAAKL,SAAS,CAACV,QAAQ,yBAAD,OAA2B,EAAKO,MAAMN,SAC5D,EAAKS,SAAS,CAACT,MAAO,KACf,G,EAGTT,WAAa,SAAAC,GACX,EAAKc,MAAMC,OAAOQ,MAAK,SAACC,EAAGC,GACzB,GAAID,EAAExB,KAAOA,EAAI,CACf,GAAuB,IAApBe,EAAOU,GAAGH,MASX,OARAP,EAAOU,GAAGH,MAAQP,EAAOU,GAAGH,MAAQ,EACpC,EAAKL,SAAS,CAACT,MAAQ,EAAKM,MAAMN,MAAQ,IAAI,WAC5CU,QAAQC,IAAIC,KAAKN,MAAMN,UAEzB,EAAKS,SAAS,CAACV,QAAS,4BAA4B,WAClDW,QAAQC,IAAIC,KAAKN,MAAMP,YAEzB,EAAKO,MAAMC,OAAOW,MAAK,kBAAMC,KAAKC,SAAW,OACtC,EAEP,EAAKZ,e,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQR,MAAOY,KAAKN,MAAMN,MAAOC,UAAWW,KAAKN,MAAML,UAAWF,QAASa,KAAKN,MAAMP,SAAtF,eACA,kBAAC,EAAD,CAAcI,aAAcS,KAAKN,MAAMH,eACtCS,KAAKN,MAAMC,OAAOc,KAAI,SAAAzB,GAAK,OAC1B,kBAAC,EAAD,CACEL,WAAY,EAAKA,WACjBC,GAAII,EAAMJ,GACV8B,IAAK1B,EAAMJ,GACXI,MAAOA,EAAM2B,c,GAtDPC,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2325d55e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"message\">{props.message}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./Instructions.css\";\n\nconst Instructions = props => (\n  <div className=\"instructions\">{props.instructions}</div>\n);\n\nexport default Instructions;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from 'react';\nimport './App.css';\nimport images from \"./images.json\";\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Instructions from \"./components/Instructions\";\nimport Wrapper from \"./components/Wrapper\";\n\nclass App extends React.Component {\n\n  state = {\n    images: images,\n    score: 0,\n    highscore: 0,\n    instructions: \"Click on an image to earn points, but don't click on any more than once!\",\n    message: \"\"\n  }\n\n  endGame = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.images.forEach(image => {\n      image.count = 0;\n    });\n    this.setState({message: `Game Over! You scored ${this.state.score}`});\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.images.find((o, i) => {\n      if (o.id === id) {\n        if(images[i].count === 0){\n          images[i].count = images[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.setState({message: \"Good click! Keep going!\"}, function() {\n            console.log(this.state.message);\n          });\n          this.state.images.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.endGame();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore} message={this.state.message}>Clicky Game</Header>\n        <Instructions instructions={this.state.instructions} />\n        {this.state.images.map(image => (\n          <Card\n            clickCount={this.clickCount}\n            id={image.id}\n            key={image.id}\n            image={image.url}\n          />\n        ))}\n      </Wrapper>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}